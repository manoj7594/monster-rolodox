{"version":3,"sources":["components/card/card.component.js","components/card-list/card-list-component.js","components/search-box/search-box.component.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","name","email","CardList","monsters","map","SearchField","placeholder","handleChange","type","onChange","App","searchMonsters","searchText","state","filteredMonsters","length","filter","toLowerCase","includes","setState","searchField","fetch","then","response","json","users","this","e","target","value","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAaeA,EAVF,SAAAC,GACT,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,eACR,6BAAKJ,EAAMG,QAAQE,OACnB,4BAAIL,EAAMG,QAAQG,YCKfC,G,MATE,SAAAP,GACb,OAAO,qBAAKC,UAAU,YAAf,SACFD,EAAMQ,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCIhBM,G,MARK,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OAChB,uBACIX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCgCHG,G,wDAnCX,aAAe,IAAD,8BACV,gBAgBJC,eAAiB,SAACC,GACd,MAAqC,EAAKC,MAApCV,EAAN,EAAMA,SAAUW,EAAhB,EAAgBA,iBACZA,GAAoBA,EAAiBC,OAAS,IAC9CZ,EAAWW,EAAiBE,QAAO,SAAAlB,GAAO,OAAIA,EAAQE,KAAKiB,cAAcC,SAASN,EAAWK,mBAEjG,EAAKE,SAAS,CAAEhB,cApBhB,EAAKU,MAAQ,CACTV,SAAU,GACVW,iBAAkB,GAClBM,YAAa,IALP,E,qDAQd,WAAqB,IAAD,OAChBC,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACEA,GAASA,EAAMV,OAAS,GACxB,EAAKI,SAAS,CAAEhB,SAAUsB,EAAOX,iBAAkBW,S,oBAWnE,WAAU,IAAD,OACL,EAAoDC,KAAKb,MAAjDV,EAAR,EAAQA,SAAR,EAAkBiB,YAAlB,EAA+BN,iBAC/B,OACI,sBAAKlB,UAAU,MAAf,UACI,cAAC,EAAD,CAAaY,KAAK,SAASF,YAAY,iBAAiBC,aAAc,SAAAoB,GAAC,OAAI,EAAKhB,eAAegB,EAAEC,OAAOC,UACxG,cAAC,EAAD,CAAU1B,SAAUA,W,GA9BlB2B,IAAMC,YCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6cd6f702.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card-component.css'\r\n\r\nconst Card = props => {\r\n    return (\r\n        <div className=\"card-container\" >\r\n            <img src={`https://robohash.org/${props.monster.id}?set=set2`} />\r\n            <h1>{props.monster.name}</h1>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react'\r\nimport Card from '../card/card.component'\r\nimport './card-list-component.css'\r\n\r\nconst CardList = props => {\r\n    return <div className='card-list'>\r\n        {props.monsters.map(monster => (\r\n            <Card key={monster.id} monster={monster} />\r\n        ))}\r\n    </div>\r\n\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react'\r\nimport './search-box.style.css'\r\n\r\nconst SearchField = ({ placeholder, handleChange }) => (\r\n    <input\r\n        className='search'\r\n        type='search'\r\n        placeholder={placeholder}\r\n        onChange={handleChange} />\r\n)\r\n\r\nexport default SearchField;","import React from 'react'\r\nimport CardList from './components/card-list/card-list-component'\r\nimport SearchField from './components/search-box/search-box.component';\r\nimport './App.css'\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            monsters: [],\r\n            filteredMonsters: [],\r\n            searchField: \"\"\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => {\r\n                if (users && users.length > 0) {\r\n                    this.setState({ monsters: users, filteredMonsters: users })\r\n                }\r\n            })\r\n    }\r\n    searchMonsters = (searchText) => {\r\n        let { monsters, filteredMonsters } = this.state;\r\n        if (filteredMonsters && filteredMonsters.length > 0) {\r\n            monsters = filteredMonsters.filter(monster => monster.name.toLowerCase().includes(searchText.toLowerCase()))\r\n        }\r\n        this.setState({ monsters })\r\n    }\r\n    render() {\r\n        const { monsters, searchField, filteredMonsters } = this.state;\r\n        return (\r\n            <div className=\"App\">\r\n                <SearchField type='search' placeholder='search monster' handleChange={e => this.searchMonsters(e.target.value)} />\r\n                <CardList monsters={monsters} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}